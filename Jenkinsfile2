pipeline {
	 agent any
	//agent { label 'jenkins-agent' }
	//agent { dockerfile true }
	environment {
		dockerImage = ''
		basedir = "$WORKSPACE"
	}

    options {
        timeout(time: 10, unit: 'MINUTES')
    }
	
	stages {
        stage("Check Docker version") {
              steps {
                sh '''
                  docker version
                  docker info
                  docker-compose version
                  echo "basedir is - ${basedir}"
                  mkdir -p ${basedir}/test
                  ls -l
                  chown -R jenkins:jenkins /var/jenkins_home/workspace
                '''
              }
        }

        stage('Docker System Prune') {
              steps {
                sh 'docker system prune -a --volumes -f'
              }
        }

		stage('Start docker-compose') {
			steps {
				sh 'docker-compose -f docker-compose-api.yaml up -d --no-color --wait'
				sh 'docker-compose ps'
			}
		}

        stage('API Automation') {
            steps {
                sh 'docker-compose -f docker-compose-api.yaml run -e TYPE="@API" api-test-service'
            }
            post {
                success {
                  publishHTML([
                              allowMissing: false,
                              alwaysLinkToLastBuild: false,
                              includes: '**/*',
                              keepAll: false,
                              reportDir: 'target/Reports/',
                              reportFiles: 'automated-test-report.html',
                              reportName: 'ExtentReport',
                              reportTitles: '',
                              useWrapperFileDirectly: true])
                }
            }
        }
		
		stage('Docker Teardown') {
			steps {
				/* Tear down docker compose */
				sh 'docker-compose down'
				
                /* Tear down all containers */
                sh 'docker-compose rm -sf'
			}
		}
	}

	post {
        always {
            sh 'docker-compose down --remove-orphans -v'
            sh 'docker-compose ps'
            //cleanWs()
        }
    }
}










